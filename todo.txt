

need to clear down the design a bit. 
restrict the admin completely so that we force user to login before being able to do anything. also 
figure an additional protective layer just in case.

add spinners

add more error handling.


ordering:

1. need the styling for all items even the ones with no description and such to be set
2. add button to implement and a basket as well. checkout to do. where we will collect their data.
3. do the responsiveness later.
4. now we need to do the checkout page. 
6. make sure to validate the items sent via the database items and get the price from there... not from the frontend
7. recaptcha for each orders! and we must validate the captcha on the backend..
8. monitor the ordering amount coming through and block orders or delay them if they seem suspiciously large in volume.
9. will need an admin page where we get the orders and a system where when he clicks on them they get archived but kept there for another 
hour or so for security purposes.
10. on the backend we should only take the id or name that we have sent along with the mount ordered. we must take a valid phone number
this is to prevent bullshit orders. this way christian can call them.
11. persist the orders through the local storage.
12. phone number validation. an exact one.
13. will need an order reference system.
14. proper hungrarian phone validator. proper email validator.
perhaps a list of food items they want to order. or something.to see the sums
15. something is not right between the communication of the api and the frontend. 
orders dont get saved and also the fucking authentication seems to suck hard.
16. figure a way to get through the error as of now it seems not to be able to catch it..
17. tabs to add for the ordering screen.